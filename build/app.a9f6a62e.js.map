{"version":3,"sources":["webpack:///./app.js","webpack:///./App.jsx","webpack:///./Forms/KeywordForm.jsx","webpack:///./Forms/DirectionForm.jsx","webpack:///./Forms/Field.jsx","webpack:///./Forms/RecipeForm.jsx","webpack:///./RecipeCardsLayout.jsx","webpack:///./Forms/TextField.jsx","webpack:///./MainPage.jsx","webpack:///./Forms/IngredientForm.jsx","webpack:///./Forms/ImageUploadForm.jsx","webpack:///./Header.jsx","webpack:///./RecipeCard.jsx","webpack:///./RecipePage.jsx","webpack:///../firebaseConfig.js","webpack:///./Forms/formState.js","webpack:///./Forms/MainForm.jsx"],"names":[],"mappings":"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","file":"app.a9f6a62e.js","sourcesContent":["if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.register('/service-worker.js');\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app.js\n// module id = 2O6T\n// module chunks = 1","import React from 'react';\nimport { render } from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nimport './app.js';\nimport MainPage from './MainPage.jsx';\n\nrender(\n  <MainPage />,\n  document.querySelector('#root'),\n);\n\n\n\n// WEBPACK FOOTER //\n// ./App.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Header, Divider, List } from 'semantic-ui-react';\n\nimport Field from './Field.jsx';\nimport { store } from './formState';\n\nclass KeywordForm extends React.Component {\n  state = {\n    keyword: '',\n  };\n\n  handleChange = ({ value }) => {\n    let { keyword } = this.state;\n    keyword = value;\n    this.setState({ keyword });\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    store.dispatch({ type: 'KEYWORDS', keyword: this.state.keyword });\n    this.setState({ keyword: '' });\n  }\n\n  render() {\n    const keywords = this.props.keywords\n      .map((item, index) => <List.Item key={index}>{item}</List.Item>);\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Field\n          placeholder=\"Keyword\"\n          name=\"keyword\"\n          value={this.state.keyword}\n          handleChange={this.handleChange}\n        />\n\n        <Form.Field>\n          <Button fluid color=\"orange\" type=\"submit\">Add Keyword</Button>\n        </Form.Field>\n\n        <Form.Field>\n          <Header as=\"h3\">\n            <Divider horizontal>List of Keywords</Divider>\n          </Header>\n          <List bulleted>{keywords}</List>\n        </Form.Field>\n\n        <Form.Field>\n          <Button\n            color=\"teal\"\n            floated=\"left\"\n            labelPosition=\"left\"\n            icon=\"arrow left\"\n            onClick={this.props.onPrevPage}\n            content=\"Previous\"\n            type=\"button\"\n          />\n          <Button\n            color=\"teal\"\n            floated=\"right\"\n            labelPosition=\"right\"\n            icon=\"file text outline\"\n            onClick={this.props.onNextPage}\n            content=\"Next\"\n            type=\"button\"\n          />\n        </Form.Field>\n\n        <Form.Field />\n      </Form>\n    );\n  }\n}\n\nKeywordForm.propTypes = {\n  onPrevPage: PropTypes.func.isRequired,\n  onNextPage: PropTypes.func.isRequired,\n};\n\nexport default KeywordForm;\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./Forms/KeywordForm.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Header, Divider, List } from 'semantic-ui-react';\n\n\nimport TextField from './TextField.jsx';\nimport { store } from './formState';\n\nclass DirectionForm extends React.Component {\n  state = {\n    direction: '',\n  };\n\n  handleChange = ({ value }) => {\n    let { direction } = this.state;\n    direction = value;\n    this.setState({ direction });\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    store.dispatch({ type: 'DIRECTIONS', direction: this.state.direction });\n    this.setState({ direction: '' });\n  }\n\n  render() {\n    const directions = this.props.directions\n      .map((item, index) => <List.Item key={index} as=\"li\">{item}</List.Item>);\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <TextField\n          placeholder=\"Direction\"\n          name=\"direction\"\n          handleChange={this.handleChange}\n          value={this.state.direction}\n        />\n\n        <Form.Field>\n          <Button fluid color=\"orange\" type=\"submit\">Add Direction</Button>\n        </Form.Field>\n\n        <Form.Field>\n          <Header as=\"h3\">\n            <Divider horizontal>Directions</Divider>\n          </Header>\n          <List as=\"ol\">{directions}</List>\n        </Form.Field>\n\n        <Form.Field>\n          <Button\n            color=\"teal\"\n            floated=\"left\"\n            labelPosition=\"left\"\n            icon=\"arrow left\"\n            onClick={this.props.onPrevPage}\n            content=\"Previous\"\n            type=\"button\"\n          />\n          <Button\n            color=\"teal\"\n            floated=\"right\"\n            labelPosition=\"right\"\n            icon=\"arrow right\"\n            onClick={this.props.onNextPage}\n            content=\"Next\"\n            type=\"button\"\n          />\n        </Form.Field>\n\n        <Form.Field />\n      </Form>\n    );\n  }\n}\n\nDirectionForm.propTypes = {\n  onNextPage: PropTypes.func.isRequired,\n  onPrevPage: PropTypes.func.isRequired,\n  directions: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default DirectionForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./Forms/DirectionForm.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\n\n\nexport default class Field extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value,\n      error: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(update) {\n    this.setState({ value: update.value });\n  }\n\n  handleChange(evt) {\n    const name = this.props.name;\n    const value = evt.target.value;\n\n    // const inValue = (name === 'title') ?\n    //   value.split(' ').join('') :\n    //   value;\n    // const error = this.props.validate(inValue);\n\n    // const showErrorMessage = document.querySelector(`.message.${name}`);\n    // if (error) {\n    //   showErrorMessage.classList.remove('hidden');\n    // } else {\n    //   showErrorMessage.classList.add('hidden');\n    // }\n\n\n    this.setState({\n      value,\n    });\n    this.props.handleChange({\n      name,\n      value,\n    });\n  }\n\n\n  render() {\n    return (\n      <Form.Field required>\n        <label htmlFor={this.props.name}>{this.props.placeholder}</label>\n        <input\n          type={this.props.type || \"text\"}\n          name={this.props.name}\n          id={this.props.name}\n          placeholder={this.props.placeholder}\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n      </Form.Field>\n\n      //   <div className={`ui negative hidden message ${this.props.name}`}>\n      //     <p>{this.state.error}</p>\n      //   </div>\n      // </div>\n    );\n  }\n}\n\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  validate: PropTypes.func,\n  handleChange: PropTypes.func,\n  type: PropTypes.string,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./Forms/Field.jsx","import React, { Component } from 'react';\nimport { Header, Grid, Container, Segment } from 'semantic-ui-react';\nimport uuid from 'uuid/v4';\n\nimport MainForm from './MainForm.jsx';\nimport IngredientForm from './IngredientForm.jsx';\nimport DirectionForm from './DirectionForm.jsx';\nimport KeywordForm from './KeywordForm.jsx';\nimport ImageUploadForm from './ImageUploadForm.jsx';\nimport { store } from './formState';\n\nclass RecipeForm extends Component {\n  state = {\n    page: 1,\n    id: uuid(),\n  };\n\n  nextPage = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }))\n  };\n\n  prevPage = () => {\n    this.setState(prevState => ({ page: prevState.page - 1 }));\n  }\n\n  componentDidMount() {\n    store.subscribe(() => this.forceUpdate());\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    const recipe = store.getState();\n    const { main } = recipe;\n    main.totalTime = parseInt(main.cookingTime, 10) + parseInt(main.prepTime, 10);\n    recipe.main.totalTime = main.totalTime;\n    recipe.id = this.state.id;\n    this.postData(recipe);\n  }\n\n  postData = (recipe) => {\n    fetch('/recipify', {\n      method: 'post',\n      body: JSON.stringify(recipe),\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch(err => console.error(err));\n\n    store.clearState();\n    this.setState({ page: 1 });\n  }\n\n  render() {\n    const formData = store.getState();\n    const { main, ingredients, keywords, directions, imageUrl } = formData;\n    return (\n      <Container>\n        <Grid centered>\n          <Grid.Row>\n            <Grid.Column mobile={16} tablet={12} computer={8}>\n              <Segment color=\"teal\" raised>\n\n                <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n                  Recipinator\n                </Header>\n\n                { this.state.page === 1 &&\n                <MainForm\n                  onNextPage={this.nextPage}\n                  main={main}\n                /> }\n\n                { this.state.page === 2 &&\n                <IngredientForm\n                  onPrevPage={this.prevPage}\n                  onNextPage={this.nextPage}\n                  ingredients={ingredients}\n                /> }\n\n                { this.state.page === 3 &&\n                <DirectionForm\n                  onPrevPage={this.prevPage}\n                  onNextPage={this.nextPage}\n                  directions={directions}\n                /> }\n\n                { this.state.page === 4 &&\n                <KeywordForm\n                  onPrevPage={this.prevPage}\n                  onNextPage={this.nextPage}\n                  keywords={keywords}\n                /> }\n\n                { this.state.page === 5 &&\n                  <ImageUploadForm\n                    onPrevPage={this.prevPage}\n                    onSubmit={this.handleSubmit}\n                    url={imageUrl}\n                    id={this.state.id}\n                /> }\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default RecipeForm;\n\n\n\n// WEBPACK FOOTER //\n// ./Forms/RecipeForm.jsx","import React from 'react';\nimport { Card, Container } from 'semantic-ui-react';\nimport 'whatwg-fetch';\n\n\nimport RecipeCard from './RecipeCard.jsx';\n\n\nclass RecipeCardsLayout extends React.Component {\n  state = {\n    recipes: [],\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = () => {\n    fetch('/api/recipes')\n      .then(res => res.json())\n      .then(recipes => this.setState({ recipes }))\n      .catch(err => console.error(err))\n  }\n\n  render() {\n    const RecipeCards = this.state.recipes.map(\n      (recipe, id) => (<RecipeCard\n        image={recipe.imageUrl}\n        header={recipe.main.title}\n        description={recipe.main.description}\n        key={id}\n        recipe={recipe}\n        id={recipe.id}\n      />),\n    );\n    return (\n      <Container>\n        <Card.Group>\n          {RecipeCards}\n        </Card.Group>\n      </Container>\n    );\n  }\n \n}\n\nexport default RecipeCardsLayout;\n\n\n\n// WEBPACK FOOTER //\n// ./RecipeCardsLayout.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'semantic-ui-react';\n\n\nexport default class TextField extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillReceiveProps(update) {\n    this.setState({ value: update.value });\n  }\n\n  handleChange(evt) {\n    const name = this.props.name;\n    const value = evt.target.value;\n\n\n    this.setState({\n      value,\n    });\n    this.props.handleChange({\n      name,\n      value,\n    });\n  }\n\n\n  render() {\n    return (\n      <Form.Field required>\n        <label htmlFor={this.props.name}>\n          {this.props.placeholder}\n        </label>\n        <textarea\n          type=\"text\"\n          name={this.props.name}\n          id={this.props.name}\n          placeholder={this.props.placeholder}\n          value={this.state.value}\n          onChange={this.handleChange}\n          rows=\"3\"\n        />\n      </Form.Field>\n\n      //   <div className={`ui negative hidden message ${this.props.name}`}>\n      //     <p>{this.state.error}</p>\n      //   </div>\n      // </div>\n    );\n  }\n}\n\nTextField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  validate: PropTypes.func,\n  handleChange: PropTypes.func,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./Forms/TextField.jsx","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nimport Header from './Header.jsx';\nimport RecipeForm from './Forms/RecipeForm.jsx';\nimport RecipeCardsLayout from './RecipeCardsLayout.jsx';\nimport RecipePage from './RecipePage.jsx';\n\nfunction MainPage() {\n  return (\n    <Router>\n      <Header>\n        <Switch>\n          <Route exact path=\"/\" component={RecipeCardsLayout} />\n          <Route path=\"/recipe/:id\" component={RecipePage} />\n          <Route path=\"/recipinator\" component={RecipeForm} />\n        </Switch>\n      </Header>\n    </Router>\n  );\n}\n\n\nexport default MainPage;\n\n\n\n// WEBPACK FOOTER //\n// ./MainPage.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Header, Divider, List } from 'semantic-ui-react';\n\n\nimport Field from './Field.jsx';\nimport { store } from './formState';\n\n\nclass IngredientForm extends React.Component {\n  state = {\n    ingredient: '',\n  };\n\n  handleChange = ({ value }) => {\n    let { ingredient } = this.state;\n    ingredient = value;\n    this.setState({ ingredient });\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    store.dispatch({ type: 'INGREDIENTS', ingredient: this.state.ingredient });\n    this.setState({ ingredient: '' });\n  }\n\n  render() {\n    const ingredients = this.props.ingredients\n      .map((item, index) => <List.Item key={index}>{item}</List.Item>);\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Field\n          placeholder=\"Ingredient\"\n          name=\"ingredient\"\n          value={this.state.ingredient}\n          handleChange={this.handleChange}\n        />\n\n        <Form.Field>\n          <Button fluid color=\"orange\" type=\"submit\">Add Ingredient</Button>\n        </Form.Field>\n\n        <Form.Field>\n          <Header as=\"h3\">\n            <Divider horizontal>List of Ingredients</Divider>\n          </Header>\n          <List bulleted>{ingredients}</List>\n        </Form.Field>\n\n        <Form.Field>\n          <Button\n            color=\"teal\"\n            floated=\"left\"\n            labelPosition=\"left\"\n            icon=\"arrow left\"\n            onClick={this.props.onPrevPage}\n            content=\"Previous\"\n            type=\"button\"\n          />\n          <Button\n            color=\"teal\"\n            floated=\"right\"\n            labelPosition=\"right\"\n            icon=\"arrow right\"\n            onClick={this.props.onNextPage}\n            content=\"Next\"\n            type=\"button\"\n          />\n        </Form.Field>\n\n        <Form.Field />\n      </Form>\n    );\n  }\n}\n\nIngredientForm.propTypes = {\n  onPrevPage: PropTypes.func.isRequired,\n  onNextPage: PropTypes.func.isRequired,\n  ingredients: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default IngredientForm;\n\n\n\n// WEBPACK FOOTER //\n// ./Forms/IngredientForm.jsx","import React from 'react';\nimport { Form, Input, Button, Modal, Header, Icon } from 'semantic-ui-react';\nimport 'whatwg-fetch';\nimport firebase from '../../firebaseConfig';\nimport { store } from './formState';\n\nconst storage = firebase.storage();\nconst storageRef = storage.ref();\n\nexport default class ImageUploadForm extends React.Component {\n\n  state = {\n    imageFile: '',\n    id: this.props.id,\n    modalOpen: false,\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    const { imageFile, id: fileId } = this.state;\n    const fileName = `images/${fileId}`;\n    const uploadTask = storageRef.child(fileName).put(imageFile);\n\n    uploadTask.on('state_changed',\n      (snapshot) => {\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n      },\n      error => console.log('Error during upload'),\n      () => {\n        const downloadURL = uploadTask.snapshot.downloadURL;\n        store.dispatch({\n          type: 'URL',\n          imageUrl: downloadURL,\n        });\n        this.handleOpen();\n      }\n    )\n  }\n\n  handleOpen = () => this.setState({ modalOpen: true });\n  handleClose = () => this.setState({ modalOpen: false });\n\n  handleImage = (evt) => {\n    const imageFile = evt.target.files[0];\n    this.setState({ imageFile });\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Field required>\n          <label htmlFor=\"imageFile\">Image File</label>\n          <Input\n            name=\"imageFile\"\n            type=\"file\"\n            id=\"imageFile\"\n            accept=\"image/*\"\n            onChange={this.handleImage}\n          />\n        </Form.Field>\n\n        <Form.Field>\n          <Button\n            color=\"teal\"\n            floated=\"left\"\n            labelPosition=\"left\"\n            icon=\"arrow left\"\n            onClick={this.props.onPrevPage}\n            content=\"Previous\"\n            type=\"button\"\n          />\n          <Button\n            color=\"teal\"\n            floated=\"right\"\n            content=\"Upload Image\"\n            onClick={this.handleSubmit}\n            type=\"submit\"\n          />\n        </Form.Field>\n\n        <Form.Field />\n\n        <Form.Field>\n          <Button\n            color=\"teal\"\n            content=\"Create Recipe\"\n            fluid\n            type=\"button\"\n            onClick={this.props.onSubmit}\n          />\n        </Form.Field>\n\n        <Modal\n          open={this.state.modalOpen}\n          onClose={this.handleClose}\n          basic\n          size='small'\n        >\n          <Header icon='browser' content='Image Upload Successful' />\n          <Modal.Content>\n            <h3>Click \"Create Recipe\" to create your Recipe</h3>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color='green' onClick={this.handleClose} inverted>\n              <Icon name='image' /> Got it\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Form>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Forms/ImageUploadForm.jsx","import React from 'react';\nimport { Grid, Menu, Input } from 'semantic-ui-react';\n\n\nclass Header extends React.Component {\n  state = {\n    activeItem: '',\n  }\n\n  handleItemClick = (evt, { name }) => {\n    this.setState({ activeItem: name });\n  }\n\n  handleSearch = (evt) => {\n\n  }\n\n  render() {\n    return (\n      <div>\n      <Grid>\n        <Grid.Column>\n          <Menu pointing secondary size=\"huge\" stackable>\n            <Menu.Item header href=\"/\" name=\"home\" active={this.state.activeItem === 'home'} onClick={this.handleItemClick}>\n              Recipitopia\n            </Menu.Item>\n            <Menu.Menu position=\"right\">\n              <Menu.Item name=\"create\" href=\"/recipinator\" active={this.state.activeItem === 'create'} onClick={this.handleItemClick}>\n                Create Recipe\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu>\n        </Grid.Column>\n      </Grid>\n      {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Header;\n\n\n\n\n// WEBPACK FOOTER //\n// ./Header.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Card, Image, Divider, Rating } from 'semantic-ui-react';\n\n\nfunction RecipeCard(props) {\n  return (\n    <Card centered raised>\n      <Link\n        to={`/recipe/${props.id}`}\n        className=\"card\"\n      >\n        <Image src={props.image} fluid />\n        <Card.Content>\n          <Card.Header as=\"h4\">\n            {props.header}\n          </Card.Header>\n          <Card.Meta>\n            <Rating icon=\"heart\" defaultRating={5} maxRating={5} />\n          </Card.Meta>\n          <Divider hidden />\n          <Card.Description>\n            {props.description}\n          </Card.Description>\n        </Card.Content>\n      </Link>\n    </Card>\n  );\n}\n\nRecipeCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  header: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nexport default RecipeCard;\n\n\n\n// WEBPACK FOOTER //\n// ./RecipeCard.jsx","import React from 'react';\nimport { Container,\n  Grid,\n  Image,\n  Header,\n  List,\n  Divider,\n  Label,\n  Segment,\n  Rating,\n} from 'semantic-ui-react';\nimport 'whatwg-fetch';\n\n\nclass RecipePage extends React.Component {\n  state = {\n    recipe: '', \n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = () => {\n    fetch(`/api/recipe/${this.props.match.params.id}`)\n      .then(res => res.json())\n      .then(recipe => this.setState({ recipe }))\n      .catch(err => console.error('Recipe not found'));\n  }\n\n  render() {\n    const recipe = this.state.recipe;\n    if (!recipe) {\n      return  <div>Loading...</div>\n    } else {\n      return (\n        <Container>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column computer={6} tablet={12} mobile={16}>\n                <Image src={recipe.imageUrl} size=\"large\" shape=\"rounded\" />\n              </Grid.Column>\n              <Grid.Column computer={6} tablet={12} mobile={16}>\n                <Header as=\"h2\">{recipe.main.title}</Header>\n                <Rating icon=\"heart\" defaultRating={5} maxRating={5} size=\"large\" />\n                <Divider hidden />\n                <div>{recipe.main.description}</div>\n                <Divider hidden />\n                <Label.Group>\n                  Keywords: {recipe.keywords.map((item, i) => (<Label key={i}>{item}</Label>))}\n                </Label.Group>\n              </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row>\n              <Grid.Column computer={8} tablet={12} mobile={16}>\n                <Header as=\"h3\" icon=\"time\" content=\"Recipe prep and cooking duration\" />\n                <Divider hidden />\n                <Segment.Group horizontal>\n                  <Segment color=\"red\">\n                    <Header as=\"h5\" content=\"Prep Time\" />\n                    {recipe.main.prepTime} mins\n                  </Segment>\n                  <Segment color=\"yellow\">\n                    <Header as=\"h5\" content=\"Cooking Time\" />\n                    {recipe.main.cookingTime} mins\n                  </Segment>\n                  <Segment color=\"green\">\n                    <Header as=\"h5\" content=\"Total Time\" />\n                    {recipe.main.totalTime} mins\n                  </Segment>\n                </Segment.Group>\n              </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row>\n              <Grid.Column>\n                <Header as=\"h3\" icon=\"shopping basket\" content=\"Ingredients\" />\n                <Divider hidden />\n                <List bulleted>\n                  {recipe.ingredients.map((item, i) => (<List.Item key={i}>{item}</List.Item>))}\n                </List>\n              </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row>\n              <Grid.Column>\n                <Header as=\"h3\" icon=\"map outline\" content=\"Directions\" />\n                <Divider hidden />\n                <List>\n                  {recipe.directions.map((item, i) => (\n                    <List.Item key={i}>\n                      <List.Icon name=\"space shuttle\" />\n                      <List.Content>{item}</List.Content>\n                    </List.Item>),\n                  )}\n                </List>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n\n        </Container>\n      );\n    }\n  }\n}\n\nexport default RecipePage;\n\n\n\n\n// WEBPACK FOOTER //\n// ./RecipePage.jsx","const firebase = require('firebase');\n\n\nconst config = {\n  apiKey: process.env.FIRE_KEY,\n  authDomain: 'recipitopia.firebaseapp.com',\n  databaseURL: 'https://recipitopia.firebaseio.com',\n  projectId: 'recipitopia',\n  storageBucket: 'recipitopia.appspot.com',\n  messagingSenderId: process.env.FIRE_MESS_ID,\n};\n\nfirebase.initializeApp(config);\nmodule.exports = firebase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../firebaseConfig.js\n// module id = rWk5\n// module chunks = 1","function createStore(initialState, reducer) {\n  let state = initialState;\n  const listeners = [];\n\n  const getState = () => (state);\n  const subscribe = listener => (listeners.push(listener));\n  const dispatch = (action) => {\n    state = reducer(state, action);\n    listeners.map(listen => listen());\n  };\n\n  const clearState = () => { state = initialState; };\n\n  return {\n    getState,\n    subscribe,\n    dispatch,\n    clearState,\n  };\n}\n\n\nconst initialState = {\n  main: {\n    title: '',\n    description: '',\n    prepTime: 0,\n    cookingTime: 0,\n    totalTime: 0,\n  },\n  directions: [],\n  ingredients: [],\n  keywords: [],\n  imageUrl: '',\n};\n\n\nconst reducer = (state, action) => {\n  const { directions, ingredients, keywords, main, imageUrl } = state;\n  if (action.type === 'MAIN') {\n    return {\n      directions,\n      ingredients,\n      keywords,\n      imageUrl,\n      main: {\n        title: action.fields.title,\n        description: action.fields.description,\n        prepTime: action.fields.prepTime,\n        cookingTime: action.fields.cookingTime,\n      },\n    };\n  } else if (action.type === 'DIRECTIONS') {\n    return {\n      main,\n      keywords,\n      ingredients,\n      imageUrl,\n      directions: [...directions, action.direction],\n    };\n  } else if (action.type === 'INGREDIENTS') {\n    return {\n      main,\n      keywords,\n      directions,\n      imageUrl,\n      ingredients: [...ingredients, action.ingredient],\n    };\n  } else if (action.type === 'KEYWORDS') {\n    return {\n      main,\n      directions,\n      ingredients,\n      imageUrl,\n      keywords: [...keywords, action.keyword],\n    };\n  } else if (action.type === 'URL') {\n    return {\n      main,\n      directions,\n      ingredients,\n      keywords,\n      imageUrl: action.imageUrl,\n    };\n  }\n  return state;\n};\n\n\nconst store = createStore(initialState, reducer);\nmodule.exports = {\n  store,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./Forms/formState.js\n// module id = uMtS\n// module chunks = 1","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Header, Divider, List, Input } from 'semantic-ui-react';\n\nimport Field from './Field.jsx';\nimport TextField from './TextField.jsx';\nimport { store } from './formState';\n\nclass MainForm extends React.Component {\n  state = {\n    fields: {\n      title: this.props.main.title,\n      description: this.props.main.description,\n      imageFile: this.props.main.imageFile,\n      prepTime: this.props.main.prepTime,\n      cookingTime: this.props.main.cookingTime,\n    },\n    fieldErrors: {},\n  };\n\n  handleChange = ({ name, value }) => {\n    const { fields } = this.state;\n    fields[name] = value;\n    this.setState({\n      fields,\n    });\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    store.dispatch({ type: 'MAIN', fields: this.state.fields });\n    this.props.onNextPage();\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Field\n          placeholder=\"Recipe Title\"\n          name=\"title\"\n          value={this.state.fields.title}\n          handleChange={this.handleChange}\n        />\n\n        <TextField\n          placeholder=\"Recipe Description\"\n          name=\"description\"\n          value={this.state.fields.description}\n          handleChange={this.handleChange}\n        />\n\n        <Form.Group widths=\"equal\">\n           <Field\n             placeholder=\"Prep Time in mins\"\n             name=\"prepTime\"\n             type=\"number\"\n             value={this.state.fields.prepTime}\n             handleChange={this.handleChange}\n           />\n\n           <Field\n             placeholder=\"Cooking Time in mins\"\n             name=\"cookingTime\"\n             value={this.state.fields.cookingTime}\n             type=\"number\"\n             handleChange={this.handleChange}\n           />\n        </Form.Group>\n\n        <Form.Field>\n          <Button\n            color=\"teal\"\n            floated=\"right\"\n            labelPosition=\"right\"\n            icon=\"arrow right\"\n            content=\"Next\"\n            type=\"submit\"\n          />\n        </Form.Field>\n\n        <Form.Field />\n      </Form>\n    );\n  }\n}\n\nMainForm.propTypes = {\n  nextPage: PropTypes.func,\n};\n\nexport default MainForm;\n\n\n\n\n// WEBPACK FOOTER //\n// ./Forms/MainForm.jsx"],"sourceRoot":""}